Index: scripts/Main.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const url = window.location.href;\r\n\r\nclass Main {\r\n\tInitialize() {\r\n\t\tconst prepare = new Prepare();\r\n\t\tprepare.init();\r\n\t\tconst option = new OptionContent();\r\n\t\toption.init();\r\n\t\tconst isAuto = chrome.storage.local.get(['isAuto']).isAuto;\r\n\t\tchrome.storage.local.get(['isAuto'], (result) => {\r\n\t\t\tif (result.isAuto) this.autoRun().then();\r\n\t\t});\r\n\r\n\t\tchrome.storage.local.get(['isAutoWordList'], (result) => {\r\n\t\t\tif (result.isAutoWordList) this.autoInsertWordList().then();\r\n\t\t});\r\n\t}\r\n\r\n\tasync autoRun() {\r\n\t\tawait new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n\t\tconst editURL = (productId, resourceId) => `/cms/question/edit.html?pojo.product.productId=${productId}&pojo.resource.resourceId=${resourceId}`;\r\n\t\tconst urlOfPageCreateQuestion = \"http://192.168.200.26:8090/cms/question/resourceView.html\";\r\n\t\tconst urlOfPageInputContent = \"http://192.168.200.26:8090/cms/question/edit.html\";\r\n\r\n\t\tif (!url.includes(urlOfPageCreateQuestion) && !url.includes(urlOfPageInputContent)) return;\r\n\t\tconst currentQuestionKey = \"currentQuestion\";\r\n\r\n\t\tlet numberQuestion = parseInt($(`#${Ids.totalLine}`).text());\r\n\t\tlet currentQuestion = parseInt($(`#${Ids.questionNumber}`).val());\r\n\r\n\t\tif (!numberQuestion && !currentQuestion) return alert(\"Please select number question and current question\");\r\n\t\tif (currentQuestion > numberQuestion) {\r\n\t\t\tchrome.storage.local.set({isAuto: false});\r\n\t\t\tchrome.storage.local.set({currentQuestion: 1});\r\n\r\n\t\t\tStorage.Set(currentQuestionKey, 1);\r\n\t\t\tStorage.Set(\"CurrentQuestionNumber\", 1);\r\n\r\n\t\t\t// add log\r\n\t\t\tconst _errors = GProcess._errors;\r\n\t\t\tconst type = GProcess.type;\r\n\t\t\tconst logStorage = new LogStorage();\r\n\t\t\tconst data = [];\r\n\t\t\tObject.entries(_errors).forEach(([key, value]) => {\r\n\t\t\t\tvalue.forEach((error) => {\r\n\t\t\t\t\tdata.push({\r\n\t\t\t\t\t\tindex: key,\r\n\t\t\t\t\t\tquestionNumber: key,\r\n\t\t\t\t\t\terror: {\r\n\t\t\t\t\t\t\ttype: error.tab,\r\n\t\t\t\t\t\t\tmessage: error.message\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tconst log = logStorage.createLog(type, numberQuestion, data);\r\n\t\t\tawait logStorage.addLog(log, log.name);\r\n\r\n\t\t\tif (confirm('All question has been done, You want to open log page?')) {\r\n\t\t\t\twindow.open(chrome.runtime.getURL(\"UI/log.html\"));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (url.includes(urlOfPageCreateQuestion)) {\r\n\t\t\tStorage.Set(currentQuestionKey, currentQuestion + +1);\r\n\t\t\t// click button create question\r\n\t\t\t// http://192.168.200.26:8090/cms/question/resourceView.html?pojo.product.productId=2682&pojo.resource.resourceId=350382\r\n\t\t\tconst p_ = /pojo.product.productId=(?<productId>\\d+)/g;\r\n\t\t\tconst r_ = /pojo.resource.resourceId=(?<resourceId>\\d+)/g;\r\n\r\n\t\t\tconst executeP = p_.exec(url);\r\n\t\t\tconst executeR = r_.exec(url);\r\n\r\n\t\t\tconst productId = executeP.groups.productId;\r\n\t\t\tconst resourceId = executeR.groups.resourceId;\r\n\t\t\t//update url\r\n\t\t\twindow.location.href = editURL(productId, resourceId);\r\n\t\t}\r\n\t\tif (url.includes(urlOfPageInputContent)) {\r\n\t\t\tconst btn = $(`#${Ids.insertAndSave}`);\r\n\t\t\tconst message_alert = document.getElementsByClassName('alert alert-success');\r\n\t\t\tif (message_alert.length > 0) {\r\n\t\t\t\tconst content = message_alert[0].innerText;\r\n\t\t\t\tif (content.includes(\"An Exception occurred\")) btn.click();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t$(window).ready(() => {\r\n\t\t\t\tbtn.click();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tasync autoInsertWordList() {\r\n\t\tawait new Promise(resolve => setTimeout(resolve, 100));\r\n\t\tconst editWordListPage = \"http://192.168.200.26:8090/cms/program/adaptivewordedit.html\";\r\n\t\tif (!url.includes(editWordListPage)) return;\r\n\r\n\t\tif ($(`#wordIdSection`).text()) return;\r\n\r\n\t\tconst message_alert = document.getElementsByClassName('alert-message');\r\n\t\tif (message_alert.length > 0) return;\r\n\r\n\t\t$(document).ready(function () {\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\tconsole.log('Ready!')\r\n\t\t\t\t// click button insert and save\r\n\t\t\t\t$(`#${Ids.insertAndSave}`).click();\r\n\t\t\t}, 2000);\r\n\r\n\t\t});\r\n\t}\r\n}\r\nconst main = new Main();\r\nmain.Initialize();\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/Main.js b/scripts/Main.js
--- a/scripts/Main.js	
+++ b/scripts/Main.js	
@@ -14,6 +14,10 @@
 		chrome.storage.local.get(['isAutoWordList'], (result) => {
 			if (result.isAutoWordList) this.autoInsertWordList().then();
 		});
+
+		chrome.storage.local.get(['isAutoResourceSettings'], (result) => {
+			if (result.isAutoResourceSettings) this.autoInsertResourceSettings().then();
+		})
 	}
 
 	async autoRun() {
@@ -111,6 +115,12 @@
 
 		});
 	}
+
+	async autoInsertResourceSettings() {
+		//http://192.168.200.26:8090/cms/product/explore.html?pojo.productId=2682
+
+
+	}
 }
 const main = new Main();
 main.Initialize();
